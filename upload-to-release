#!/bin/bash

set -e
set -o pipefail

# Ensure that the GITHUB_TOKEN secret is included
if [[ -z "$GITHUB_TOKEN" ]]; then
  echo "Set the GITHUB_TOKEN env variable."
  exit 1
fi

# Ensure that the file path is present
if [[ -z "$1" ]]; then
  echo "You must pass at least one argument to this action, the path to the file to upload."
  exit 1
fi

# Only upload to non-draft releases
IS_DRAFT=$(jq --raw-output ".release.draft" $GITHUB_EVENT_PATH)
if [ "$IS_DRAFT" = true ]; then
  echo "This is a draft, so nothing to do!"
  exit 0
fi

# Prepare the headers
AUTH_HEADER="Authorization: token ${GITHUB_TOKEN}"
CONTENT_LENGTH_HEADER="Content-Length: $(stat -c%s "${1}")"
ACCEPT_HEADER="Accept: application/vnd.github.v3+json"

if [[ -z "$2" ]]; then
  CONTENT_TYPE_HEADER="Content-Type: ${2}"
else
  CONTENT_TYPE_HEADER="Content-Type: application/zip"
fi

# Get the release ID from the tag name
TAG_NAME=$(jq --raw-output ".ref" $GITHUB_EVENT_PATH | sed "s/refs\///g")
RELEASES_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${TAG_NAME}"
RELEASE_RESPONSE=$(curl -sSL -XGET -H "${AUTH_HEADER}" -H "${ACCEPT_HEADER}" ${RELEASES_URL})
RELEASE_ID=$(echo ${resp} | jq .id | sed "s/\"//g")

# Build the Upload URL from the various pieces
FILENAME=$(basename $1)
UPLOAD_URL="https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets?name=${FILENAME}"
echo "$UPLOAD_URL"

# Upload the file
curl \
  -sSL \
  -XPOST \
  -H "${AUTH_HEADER}" \
  -H "${CONTENT_LENGTH_HEADER}" \
  -H "${CONTENT_TYPE_HEADER}" \
  --upload-file "${1}" \
  "${UPLOAD_URL}"
